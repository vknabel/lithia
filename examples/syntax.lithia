import tests

let a = 1

enum Optional {
  data Some {
    value
  }
  data None
}

enum Bool {
  data True
  data False
}

func just { x => Some x }
just 1
just 1

let x Variable 1
x.accept "Hallo"
print x.current

type Optional {
  Some: { some => print some.value },
  None: { _ => print "None" }
} Some 1

tests.test "it runs", print "good"

func if { condition, then, else =>
  type Bool {
    True: { a => then },
    False: { a => else }
  } condition
}

func and { lhs, rhs =>
  if lhs, (if rhs, True, False), False
}

func or { lhs, rhs =>
  if lhs, True, rhs
}

func not { flag =>
  if flag, False, True
}
