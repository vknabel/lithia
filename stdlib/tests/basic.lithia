package tests

import lists
import strings

let testCases = Variable Nil

data TestCase {
    title
    impl fail
}

data TestSummary {
    ok
    notOk
    failedTests
}

let enabled = with osEnv "LITHIA_TESTS", type Optional {
    Some: { some => some.value != "" },
    None: { _ => False }
}

func test { case, function =>
    testCases.accept (lists.append (TestCase case, function), testCases.current)
}

func runTests { =>
    print "TAP version 13"
    print strings.concat [
        "1..",
        lists.count testCases.current
    ]

    let summary = (lists.reduce runTestCase, (TestSummary 0, 0, Nil), testCases.current)

    with summary.failedTests, type List {
        Cons: { _ =>
            let testCount = summary.ok + summary.notOk
            print "FAILED tests"
            print strings.concat [
                "Failed ",
                summary.ok,
                "/",
                testCount,
                " tests"
            ]
            osExit 1
        },
        Nil: { _ =>
            let testCount = summary.ok + summary.notOk
            print "SUCCEEDED tests"
            print strings.concat [
                "Success ",
                summary.ok,
                "/",
                testCount,
                " tests"
            ]
        }
    }
}

func runTestCase { summary, testCase =>
    let testNumber = summary.ok + summary.notOk + 1
    let failure = Variable None
    testCase.impl { message => failure.accept Some message }

    with failure.current, type Optional {
        Some: { some => 
            print strings.concat [
                "not ok ",
                testNumber,
                " - ",
                testCase.title
            ]
            print "  ---"
            print "  message: ".append some.value
            print "  severity: fail"
            TestSummary summary.ok, summary.notOk+1, (lists.append testNumber, summary.failedTests)
        },
        None: { _ => 
            print strings.concat [
                "ok ",
                testNumber,
                " - ",
                testCase.title
            ]
            TestSummary (summary.ok+1), summary.notOk, summary.failedTests
        }
    }
}
