module optionals

import booleans
import controls { Functor }

let functor = Functor map

func map { transform =>
  type Optional {
    Some: { some => transform some.value },
    None: { _ => None }
  }
}

// describe "optional map", { it =>
//   let equality = optionals.equalityWitness booleans
  
//   it "always returns None if None", { expect =>
//     let sut = None
//     let result = map { n => n + 1 }, sut
//     expect.toEqual equality, result, None
//   }
  
//   it "applies function to some value", { expect =>
//     let sut = Some 41
//     let result = map { n => n + 1 }, sut
//     expect.toEqual equality, result, Some 42
//   }
// }

// describe "is none", { it =>
//   it "is false for some", { expect =>
//     expect booleans.not isNone, Some 41
//     expect booleans.not isNone, Some Some "nested"
//   }
  
//   it "is true for none" { assert =>
//     expect isNone None
//   }
// }
