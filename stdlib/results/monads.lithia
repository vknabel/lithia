module results

import controls

/// A witness for controls.Monad for results.Result.
/// In contrast to failureMonad, implemented to map Success values.
let successMonad = controls.Monad pureSuccess, flatMapSuccess

func pureSuccess { value =>
    Success value
}

func flatMapSuccess { transform, result =>
    with result, type Result {
        Success: { success => transform success.value },
        Failure: { failure => failure }
    }
}


/// A witness for controls.Monad for results.Result.
/// In contrast to successMonad, implemented to map Failure errors.
let failureMonad = controls.Monad pureFailure, flatMapFailure

func pureFailure { error =>
    Failure error
}

func flatMapFailure { transform, result =>
    with result, type Result {
        Success: { success => success },
        Failure: { failure => transform failure.error }
    }
}

let monad = successMonad
let flatMap = flatMapSuccess
