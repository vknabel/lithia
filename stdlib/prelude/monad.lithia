module monads

/// Monads apply a function returning wrapped values to a wrapped value.
///
/// Invariants:
/// 1. Left-Identity: `(pipe [pure, flatMap f], value) == f value`
/// 2. Right-Identity: `(pipe [pure, flatMap { x => x }], value) == pure value`
/// 3. Associative: `(pipe [pure, flatMap f, flatMap g], value) == pipe [pure, flatMap g, flatMap f], value`
data Monad {
    pure value
    flatMap f, instance
}

func pure { value, witness =>
    witness.pure value
}

func flatMap { f, witness, instance =>
    witness.flatMap f, instance
}
